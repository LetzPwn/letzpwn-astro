---
import { Image } from "astro:assets"

export interface Props {
  title: string;
  excerpt?: string;
  author: string;
  date: string; // Ensure `date` is always a string
  tags?: string[];
  url: string;
  coverImagePath?: any;
}

const { title, excerpt, author, url, tags, coverImagePath } = Astro.props;
let date = Astro.props.date ?? "Unknown Date"; // Ensure `date` is always a string
// Define date formatting options correctly
const dateOptions: Intl.DateTimeFormatOptions = {
  year: "numeric",
  month: "long",
  day: "numeric",
};

// Ensure `date` is correctly parsed only if it's in valid "YYYY-MM-DD" format
const parsedDate =
  date && /^\d{4}-\d{2}-\d{2}$/.test(date)
    ? new Date(date + "T00:00:00Z") // Append "T00:00:00Z" to ensure correct parsing
    : null;

// Convert to formatted string
const formattedPublishDate =
  parsedDate && !isNaN(parsedDate.getTime())
    ? parsedDate.toLocaleDateString("en-US", dateOptions) // "February 20, 2020"
    : "Unknown Date";
---

<div
  class="player-block col-lg-4 col-md-6 col-sm-12 wow fadeInLeft"
  data-wow-delay="0ms"
>
  <div class="inner-box hvr-bob fixed-height-box">
    <div class="sponsor-background">
      <a href={url}><img style="height:300px; overflow:hidden;object-fit:cover;width:auto;" src={coverImagePath.src} alt="" /></a>
    </div>
    <div class="lower-content">
      <div class="post-content">
        <h3><a href={url}>{title}</a></h3>
        {excerpt && <p class="excerpt">{excerpt}</p>}
      </div>
      <div class="post-footer">
        <p class="author-date">{author} â€¢ {formattedPublishDate}</p>
        {tags && tags.length > 0 && (
          <ul class="social-icons">
            {tags.map((tag) => (
              <li>
                <a href={'/tags/' + tag}>{tag}</a>
              </li>
            ))}
          </ul>
        )}
      </div>
    </div>
  </div>
</div>

<style>
  .fixed-height-box {
    border: 3px solid #fff;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    height: 650px; /* Set a fixed height */
    overflow: hidden; /* Prevent content overflow */
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Distribute space between child elements */
  }

  .sponsor-background {
    text-align: center;
    margin-bottom: 20px;
  }

  .lower-content {
    padding: 15px;
    height: 360px;
    background-color: #f8f9fa;
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Keeps footer at the bottom */
  }

  .post-content {
    flex-grow: 1; /* Allows title & excerpt to expand */
    overflow: hidden;
  }

  .post-footer {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    text-align: center;
  }

  .author-date {
    font-size: 14px;
    color: #555;
  }

  .excerpt {
    font-size: 14px;
    color: #333;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .social-icons {
    display: flex;
    gap: 8px;
    padding: 0;
    list-style: none;
    flex-wrap: wrap;
    justify-content: center;
  }

  .social-icons li {
    display: inline;
  }

  .social-icons a {
    text-decoration: none;
    color: #059ccf;
    font-size: 14px;
  }
</style>
